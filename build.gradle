plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5+" apply false
    id "io.github.pacifistmc.forgix" version "1.2.9"
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

architectury {
    minecraft = rootProject.minecraft_version
}

forgix {
    group = "whocraft.tardis_refined"
    mergedJarName = "$rootProject.jar_name-mc$project.minecraft_version-v${rootProject.mod_version}.jar"
    outputDir = "build/libs"
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            // parchment("org.parchmentmc.data:parchment-${rootProject.mappings}")
        }
        implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    }

    build.finalizedBy(mergeJars)
    assemble.finalizedBy(mergeJars)
}
if (System.getenv("curseforge") != null && System.getenv("modrinth") != null) {
    unifiedPublishing {
        project {
            displayName = "Tardis Refined - mc${rootProject.minecraft_version}-v${rootProject.mod_version}"
            releaseType = "release"
            changelog = new File("${rootProject.projectDir}/changelog.md").text
            gameVersions = ["$rootProject.minecraft_version"]
            mainPublication project.layout.file(project.provider {
                new File("${project.projectDir}/build/libs/$rootProject.jar_name-mc$project.minecraft_version-v${rootProject.mod_version}.jar")
            })
            gameLoaders = ["fabric", "neoforge"]
            relations {
                optional {
                    curseforge = "immersive-portals-mod"
                    modrinth = "immersiveportals"
                }
            }

            var CURSE_API_KEY = project.findProperty("curseforge") ?: System.getenv("curseforge") ?: ""
            if (CURSE_API_KEY != "") {
                curseforge {
                    token = CURSE_API_KEY
                    id = "782697"
                    gameVersions.addAll "Java 17", "$rootProject.minecraft_version"
                }
            }

            var MODRINTH_TOKEN = project.findProperty("modrinth") ?: System.getenv("modrinth") ?: ""
            if (MODRINTH_TOKEN != "") {
                modrinth {
                    token = MODRINTH_TOKEN
                    id = "nqVt6aES"
                    version = "$project.version"
                }
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = "${project.name}-${rootProject.jar_name}"
    version = "mc${rootProject.minecraft_version}-v${rootProject.mod_version}"
    group = rootProject.maven_group

    repositories {
        maven {
            url "https://cursemaven.com"
        }

        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }

        maven { url 'https://jitpack.io' }

        flatDir {
            dirs '../modlibs'
        }


    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

tasks.mergeJars.dependsOn(tasks.build)

tasks.register('publishMeEverywhere') {
    dependsOn tasks.mergeJars, tasks.publishUnified
}

tasks.publishUnified {
    mustRunAfter tasks.mergeJars
}